1.在函数中申明的变量随着函数的调用完成而消亡。
2.参数传递
  所有函数的参数都是按值传递的。也就是说，把函数外部的值复制给函数内部的参数。就和把值从一个变量复制到另一个变量一样。基本类型值的传递如同
基本类型变量的复制一样，而引用类型值的传递，则如同引用类型变量的复制一样。

3、执行环境和作用域
	每个函数都有自己的执行环境，当执行流进入一个环境时，函数的环境会被推入一个环境栈中。在函数执行完以后，栈将其环境弹出，把控制权返回给之前的执行环境。
	当代码在一个环境中执行时，会创建变量对象的一个作用域链（scope chain）。作用域链的用途，是保证对执行环境有权访问的所有变量和函数的有序访问，作用域链的前端始终都是当前执行的代码所在环境的变量对象。如果这个环境

是函数，则将其活动对象（activation object）作为变量对象，活动对象最开始只包含一个变量，即arguments对象（这个对象在全局函数中是不存在的）。作用域中的下一个变量对象来自包含（外部）环境，而再下一个变量对象则来自下一个包

含环境。这样，一直延续到全局执行环境；全局值型环境的变量对象始终都是作用域链中的最后一个对象。 


4.引用类型
fsd 
	
